shiny::runApp('~/GitHub/Persstatistiek/Persstatistieken')
runApp('~/GitHub/Persstatistiek/Persstatistieken')
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("sortable")
runApp()
runApp()
install.packages("shinydashboardPlus")
runApp()
shiny::runApp()
install.packages(c("devtools", "shiny"))
install.packages(c("devtools", "shiny"))
install.packages(c("devtools", "shiny"))
install.packages(c("devtools", "shiny"))
shiny::runApp()
runApp()
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/download.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(data.preparation)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data.preparation)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(simple_barplot)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("lubridate")
View(data.preparation)
runApp()
View(data.visual)
runApp()
runApp()
runApp()
View(data.preparation)
View(data.visual)
runApp()
View(simple_barplot)
runApp()
runApp()
runApp()
View(simple_piechart)
runApp()
runApp()
View(data.preparation)
runApp()
View(data.preparation)
View(data.visual)
shiny::runApp()
View(data.visual)
View(data.visualOutput)
View(data.visualOutput)
runApp()
runApp()
shiny::runApp()
View(advanced.pie)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
traceback()
runApp()
runApp()
View(data.preparation)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='cvandeneynde',
token='34A1D47083421472FA42A0182D69D683',
secret='Av1WAtV0XuaopL3fGlYzF8iEEBXIdBNudnHjP7yx')
shiny::runApp()
runApp()
runApp()
View(data.preparation)
runApp()
runApp()
install.packages("DescTools")
runApp()
runApp()
runApp()
runApp()
runApp()
test <- "2020-01-01"
test2 <- factor(weekdays(as.Date(test), abbreviate = TRUE), levels = day.abb)
test2
test <- "2020-01-01"
test2 <- factor(weekdays(as.Date(test), abbreviate = TRUE))
test3 <- factor(weekdays(as.Date(test), abbreviate = TRUE), levels = day.abb)
test <- "2020-01-01"
test2 <- factor(weekdays(as.Date(test), abbreviate = TRUE))
test3 <- factor(weekdays(as.Date(test), abbreviate = TRUE), levels = day.abb)
test2
test3
shiny::runApp()
test <- "2020-01-01"
test2 <- weekdays(as.Date(test))
test3 <- wday(as.Date(test))
test3 <- wday(as.Date(test), week_start = getOption("lubridate.week.start", 7))
test3 <- wday(as.Date(test), week_start = getOption("lubridate.week.start", 7))
test3 <- wday(as.Date(test), week_start = getOption("lubridate.week.start", 6))
test3 <- wday(as.Date(test), week_start = getOption("lubridate.week.start", 1))
test3 <- wday(as.Date(test), week_start =  1))
test <- "2020-01-02"
test <- "2020-01-02"
test2 <- weekdays(as.Date(test))
test3 <- wday(as.Date(test), week_start =  1))
test <- "2020-01-01"
test2 <- weekdays(as.Date(test))
test3 <- wday(as.Date(test), week_start = getOption("lubridate.week.start", 1))
test <- "2020-01-02"
test2 <- weekdays(as.Date(test))
test3 <- wday(as.Date(test), week_start = getOption("lubridate.week.start", 1))
runApp()
runApp()
c(01:12)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
View(data.preparation)
runApp()
runApp()
runApp()
runApp()
duplicated(manual.headers)
duplicated(manual.headers)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(calc_percentages)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
runApp()
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/data_visualisation.R')
shiny::runApp()
View(data.visual)
View(calc_percentages)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(data.preparation)
View(data.visual)
runApp()
install.packages("ISOweek")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("readxl")
runApp()
runApp()
runApp()
---
output:
html_document:
toc: true
toc_float:
collapsed: false
smooth_scroll: true
toc_depth: 4
params:
titel: NA
Persberichten.alg: NA
Persconferenties.alg: NA
Persberichten.beleid.maand: NA
Persberichten.beleid.beleid: NA
Persberichten.verzender.alg: NA
Persberichten.verzender.maand: NA
Persberichten.type: NA
Persreturn.beleid: NA
Persreturn.medium: NA
rendered_by_shiny: FALSE
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/simple_barplot.R')
data()$Persberichten
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/percentages.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/percentages.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/percentages.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/percentages.R')
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/percentages.R')
runApp()
View(calc_percentages)
View(calc_percentages)
debugSource('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/percentages.R')
runApp()
n
runApp()
n
shiny::runApp()
runApp()
runApp()
install.packages(c("cachem", "rappdirs", "tibble"))
shiny::runApp()
runApp()
runApp()
view Deelbeleiden()
view(Deelbeleiden())
Deelbeleidden
Deelbeleidden()
Deelbeleiden()
reactive(Deelbeleiden())
reactive(view(Deelbeleiden()))
print(Deelbeleiden())
reactive(print(Deelbeleiden()))
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
runApp()
read_excel(file = 'E:\Documenten\GitHub\Persstatistiek\E:\Documenten\GitHub\Persstatistiek', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel(file = './Persstatistiek/Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel('./Persstatistiek/Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel('E:\Documenten\GitHub\Persstatistiek\Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel('.\Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel('./Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel('./Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel('E:/Documenten/GitHub/Persstatistiek/Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"), col_names = TRUE)
read_excel('E:/Documenten/GitHub/Persstatistiek/Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H3:I3"))
read_excel('E:/Documenten/GitHub/Persstatistiek/Persstatistiek_template.xlsx', sheet = 'Dependencies', range = cell_cols("H:I"))
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
Excel
View(Excel)
View(Excel)
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
runApp()
install.packages("cachem")
install.packages("cachem")
library(jsonlite)
install.packages("DataTables")
install.packages("DT")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/GitHub/Persstatistiek/Persstatistieken/Modules/Functions/ophalen_deelbeleiden.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Deelbeleiden[Economie]
Deelbeleiden[Economie]
Deelbeleiden['Economie'']
